# Redis Persistence Configuration for GitHub-RunnerHub
# Enhanced configuration for data durability and backup

# =========================== SNAPSHOTTING ============================

# Save the DB to disk automatically
# Format: save <seconds> <changes>
# Will save the dataset if both the given number of seconds and changes have occurred

# Save after 1 hour if at least 1 key changed
save 3600 1

# Save after 5 minutes if at least 100 keys changed
save 300 100

# Save after 1 minute if at least 10000 keys changed
save 60 10000

# By default Redis will stop accepting writes if RDB snapshots are enabled
# and the latest background save failed
stop-writes-on-bgsave-error yes

# Compress string objects using LZF when dump .rdb databases
rdbcompression yes

# Since version 5 of RDB a CRC64 checksum is placed at the end of the file
rdbchecksum yes

# The filename where to dump the DB
dbfilename runnerhub-dump.rdb

# The working directory
dir /data

# =========================== APPEND ONLY FILE ===========================

# Enable AOF for maximum durability
appendonly yes

# The name of the append only file
appendfilename "runnerhub-appendonly.aof"

# fsync() calls tell the Operating System to actually write data on disk
# instead of waiting for more data in the output buffer
#
# always    - fsync every write (very slow, very safe)
# everysec  - fsync only one time every second (compromise)
# no        - never fsync, just let the OS flush the data (fast)
appendfsync everysec

# When the AOF fsync policy is set to always or everysec, and a background
# saving process is active, Redis may block writes for a short time
no-appendfsync-on-rewrite no

# Automatic rewrite of the append only file
# Redis remembers the size of the AOF file after the latest rewrite
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# An AOF file may be found to be truncated at the end during startup
aof-load-truncated yes

# Redis can create append-only base files in RDB or AOF format
aof-use-rdb-preamble yes

# =========================== GENERAL ================================

# Accept connections on the specified port
port 6379

# TCP listen() backlog
tcp-backlog 511

# TCP keepalive
tcp-keepalive 300

# Close the connection after a client is idle for N seconds
timeout 0

# =========================== SECURITY ================================

# Require clients to authenticate before processing commands
# This should be set via environment variable REDIS_PASSWORD
# requirepass ${REDIS_PASSWORD}

# Disable dangerous commands in production
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG ""
rename-command DEBUG ""
rename-command EVAL ""
rename-command SCRIPT ""

# =========================== MEMORY MANAGEMENT =====================

# Set a memory usage limit to the specified amount of bytes
maxmemory 2gb

# How Redis will select what to remove when maxmemory is reached
# allkeys-lru -> Remove any key according to the LRU algorithm
# volatile-lru -> Remove any key with an expire set according to the LRU algorithm
# allkeys-random -> Remove a random key, any key
# volatile-random -> Remove a random key with an expire set
# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)
# noeviction -> Don't evict anything, just return an error on write operations
maxmemory-policy allkeys-lru

# =========================== LOGGING ================================

# Specify the server verbosity level
loglevel notice

# Specify the log file name
logfile "/var/log/redis/redis-server.log"

# Enable syslog logging
syslog-enabled yes
syslog-ident redis

# =========================== PERSISTENCE MONITORING ================

# Enable latency monitoring
latency-monitor-threshold 100

# =========================== CLIENT OUTPUT BUFFER LIMITS ===========

# Client output buffer limits can be used to force disconnection of clients
# Normal clients
client-output-buffer-limit normal 0 0 0

# Replica clients
client-output-buffer-limit replica 256mb 64mb 60

# Pub/Sub clients
client-output-buffer-limit pubsub 32mb 8mb 60

# =========================== SLOW LOG ================================

# Log queries slower than the specified number of microseconds
slowlog-log-slower-than 10000

# Maximum length of the slow log
slowlog-max-len 128

# =========================== ADVANCED CONFIG =========================

# Hash table parameters
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List parameters
list-max-ziplist-size -2
list-compress-depth 0

# Set parameters
set-max-intset-entries 512

# Sorted set parameters
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog parameters
hll-sparse-max-bytes 3000

# Streams parameters
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client timeouts
client-query-buffer-limit 1gb

# Protocol parameters
proto-max-bulk-len 512mb

# Frequency of background tasks
hz 10

# Dynamic HZ
dynamic-hz yes

# AOF rewrite incremental fsync
aof-rewrite-incremental-fsync yes

# RDB incremental fsync
rdb-save-incremental-fsync yes

# =========================== BACKUP SPECIFIC ========================

# Custom configuration for backup operations
# These are used by the backup scripts

# Backup notification
notify-keyspace-events Ex

# Replica configuration for backup purposes
replica-read-only yes
replica-serve-stale-data yes

# Persistence during backup
save-on-shutdown yes

# Additional logging for backup operations
syslog-facility local0