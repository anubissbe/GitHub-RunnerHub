# GitHub RunnerHub High Availability Environment Configuration
# Copy this file to .env.ha and customize the values for your deployment

# === Application Configuration ===
NODE_ENV=production
PORT=3001
WS_PORT=3002

# === High Availability Configuration ===
HA_ENABLED=true
HA_NODE_ID=orchestrator-1
HA_CLUSTER_NODES=orchestrator-1,orchestrator-2,orchestrator-3

# === Leader Election ===
LEADER_ELECTION_ENABLED=true
LEADER_ELECTION_LOCK_KEY=runnerhub:leader:lock
LEADER_ELECTION_TIMEOUT=30000
LEADER_ELECTION_RENEWAL=10000
LEADER_ELECTION_RETRY_INTERVAL=5000
LEADER_ELECTION_MAX_RETRIES=5

# === Health Check Configuration ===
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_ALERT_THRESHOLD=3

# === Database Configuration ===
# Primary database
DB_HOST=postgres-primary
DB_PORT=5432
DB_NAME=github_runnerhub
DB_USER=db_user
DB_PASSWORD=secure_password_123
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# Replica database
DATABASE_REPLICA_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres-replica:5432/${DB_NAME}
DATABASE_ENABLE_READ_REPLICA=true
DATABASE_CONNECTION_POOL_SIZE=20
DATABASE_MAX_CONNECTIONS=100

# Replication user
REPLICATION_USER=replicator
REPLICATION_PASSWORD=replication_password_456

# === Redis Configuration ===
# Basic Redis settings
REDIS_HOST=redis-master
REDIS_PORT=6379
REDIS_PASSWORD=redis_password_789
REDIS_USER=default

# Redis Sentinel Configuration
REDIS_ENABLE_SENTINEL=true
REDIS_SENTINEL_HOSTS=redis-sentinel-1:26379,redis-sentinel-2:26379,redis-sentinel-3:26379
REDIS_MASTER_NAME=github-runnerhub-redis
REDIS_SENTINEL_PASSWORD=sentinel_password_101

# Sentinel IPs (for announce)
SENTINEL_1_IP=redis-sentinel-1
SENTINEL_2_IP=redis-sentinel-2
SENTINEL_3_IP=redis-sentinel-3

# === Load Balancer Configuration ===
LOAD_BALANCER_URL=http://haproxy:80
HAPROXY_STATS_USER=admin
HAPROXY_STATS_PASSWORD=stats_password_202

# === Shared Storage Configuration ===
SHARED_STORAGE_PATH=/shared
NFS_SERVER=nfs-server
NFS_MOUNT_POINT=/mnt/shared

# === GitHub Configuration ===
GITHUB_TOKEN=your_github_token_here
GITHUB_ORG=your_organization
GITHUB_RUNNER_VERSION=2.311.0

# === Vault Configuration ===
VAULT_ADDR=http://vault:8200
VAULT_TOKEN=your_vault_token_here

# === Security Configuration ===
JWT_SECRET=your_jwt_secret_here
ENCRYPTION_KEY=your_encryption_key_here
API_RATE_LIMIT=100
API_RATE_WINDOW=900000

# Container security
SECURITY_SCAN_IMAGES=true
SECURITY_BLOCK_ON_VULNERABILITIES=false
SECURITY_BLOCK_ON_SCAN_FAILURE=false
SECURITY_MAX_CRITICAL=0
SECURITY_MAX_HIGH=5
SECURITY_SCAN_TIMEOUT=300000

# === Runner Configuration ===
RUNNER_POOL_MIN=1
RUNNER_POOL_MAX=10
RUNNER_SCALE_INCREMENT=5
RUNNER_SCALE_THRESHOLD=0.8
RUNNER_IDLE_TIMEOUT=300
RUNNER_NETWORK_PREFIX=runner-net
RUNNER_IMAGE=myoung34/github-runner:latest
RUNNER_JOB_TIMEOUT=3600000
RUNNER_CPU_LIMIT=2048
RUNNER_MEMORY_MB=4096
RUNNER_PIDS_LIMIT=512

# === Docker Configuration ===
DOCKER_HOST=/var/run/docker.sock
DOCKER_SOCKET_PATH=/var/run/docker.sock
DOCKER_SOCKET_PROXY=

# === Monitoring Configuration ===
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
GRAFANA_ENABLED=true
GRAFANA_PORT=3000
GRAFANA_PASSWORD=grafana_password_303
GRAFANA_DB_NAME=grafana
GRAFANA_DB_USER=grafana
GRAFANA_DB_PASSWORD=grafana_db_password_404

# === Logging Configuration ===
LOG_LEVEL=info
LOG_FORMAT=json
LOG_DIR=/var/log/runnerhub

# === Orchestrator-specific Environment Variables ===
# For orchestrator-1
ORCHESTRATOR_1_HOST=orchestrator-1
ORCHESTRATOR_1_URL=http://orchestrator-1:3001

# For orchestrator-2
ORCHESTRATOR_2_HOST=orchestrator-2
ORCHESTRATOR_2_URL=http://orchestrator-2:3001

# For orchestrator-3
ORCHESTRATOR_3_HOST=orchestrator-3
ORCHESTRATOR_3_URL=http://orchestrator-3:3001

# === Additional Redis Configuration ===
# Redis announce IPs (for replication in containers)
REDIS_ANNOUNCE_IP=redis-master
REDIS_SLAVE_ANNOUNCE_IP=redis-slave

# === Network Configuration ===
# Subnet configurations for Docker networks
HA_NETWORK_SUBNET=172.20.0.0/16
BACKEND_NETWORK_SUBNET=172.21.0.0/16

# === SSL/TLS Configuration (optional) ===
# SSL_CERT_PATH=/etc/ssl/certs/server.crt
# SSL_KEY_PATH=/etc/ssl/private/server.key
# SSL_CA_PATH=/etc/ssl/certs/ca.crt

# === Development/Testing Configuration ===
# Set to true for development environments
SKIP_SSL_VERIFICATION=false
DEBUG_MODE=false