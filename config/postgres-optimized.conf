# PostgreSQL Performance Optimization Configuration
# Based on load testing results showing high concurrent job processing

# Connection Settings
max_connections = 300
shared_buffers = 512MB
effective_cache_size = 2GB
work_mem = 8MB
maintenance_work_mem = 128MB

# Query Planner
random_page_cost = 1.1
effective_io_concurrency = 300
max_worker_processes = 8
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

# WAL Settings
wal_buffers = 32MB
checkpoint_completion_target = 0.9
max_wal_size = 8GB
min_wal_size = 2GB
checkpoint_timeout = 10min

# Performance Monitoring
shared_preload_libraries = 'pg_stat_statements'
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all
log_statement_stats = off
log_parser_stats = off
log_planner_stats = off
log_executor_stats = off

# Autovacuum Tuning
autovacuum = on
autovacuum_max_workers = 4
autovacuum_naptime = 15s
autovacuum_vacuum_threshold = 100
autovacuum_analyze_threshold = 100
autovacuum_vacuum_scale_factor = 0.05
autovacuum_analyze_scale_factor = 0.02

# Logging for Performance Analysis
log_min_duration_statement = 1000
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 10240

# Lock Management
deadlock_timeout = 1s
max_locks_per_transaction = 128
max_pred_locks_per_transaction = 128
